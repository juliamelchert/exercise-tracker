{"ast":null,"code":"var _jsxFileName = \"/Users/juliamelchert/Documents/CS 290/assignment_6 copy/melcherj_react/src/pages/CreateExercisePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateExercisePage = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [reps, setReps] = useState('');\n  const [weight, setWeight] = useState('');\n  const [unit, setUnit] = useState('');\n  const [date, setDate] = useState('');\n  const history = useHistory();\n\n  const createExercise = async () => {\n    const newExercise = {\n      name,\n      reps,\n      weight,\n      unit,\n      date\n    };\n    const response = await fetch('/exercises', {\n      method: 'POST',\n      body: JSON.stringify(newExercise),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (response.status === 201) {\n      alert(\"Successfully added the exercise.\");\n    } else {\n      alert(`Failed to add the exercise, status code = ${response.status}`);\n    }\n\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"heading\",\n      children: \"Create Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter name here\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: reps,\n      placeholder: \"Enter reps here\",\n      onChange: e => setReps(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter weight here\",\n      value: weight,\n      onChange: e => setWeight(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter kgs or lbs here\",\n      value: unit,\n      onChange: e => setUnit(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"MM-DD-YY\",\n      value: date,\n      onChange: e => setDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createExercise,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateExercisePage, \"HR53OKYLbeiG2n1QA8ByhZdH+O0=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateExercisePage;\nexport default CreateExercisePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateExercisePage\");","map":{"version":3,"sources":["/Users/juliamelchert/Documents/CS 290/assignment_6 copy/melcherj_react/src/pages/CreateExercisePage.js"],"names":["React","useState","useHistory","CreateExercisePage","name","setName","reps","setReps","weight","setWeight","unit","setUnit","date","setDate","history","createExercise","newExercise","response","fetch","method","body","JSON","stringify","headers","status","alert","push","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAEpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMa,OAAO,GAAGZ,UAAU,EAA1B;;AAEA,QAAMa,cAAc,GAAG,YAAY;AAC/B,UAAMC,WAAW,GAAG;AAACZ,MAAAA,IAAD;AAAOE,MAAAA,IAAP;AAAaE,MAAAA,MAAb;AAAqBE,MAAAA,IAArB;AAA2BE,MAAAA;AAA3B,KAApB;AACA,UAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAD,EAAe;AACvCC,MAAAA,MAAM,EAAE,MAD+B;AAEvCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf,CAFiC;AAGvCO,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAH8B,KAAf,CAA5B;;AAOA,QAAIN,QAAQ,CAACO,MAAT,KAAoB,GAAxB,EAA6B;AACzBC,MAAAA,KAAK,CAAC,kCAAD,CAAL;AACH,KAFD,MAEO;AACHA,MAAAA,KAAK,CAAE,6CAA4CR,QAAQ,CAACO,MAAO,EAA9D,CAAL;AACH;;AACDV,IAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AACH,GAfD;;AAiBA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,iBAFhB;AAGI,MAAA,KAAK,EAAEtB,IAHX;AAII,MAAA,QAAQ,EAAEuB,CAAC,IAAItB,OAAO,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,KAAK,EAAEvB,IAFX;AAGI,MAAA,WAAW,EAAC,iBAHhB;AAII,MAAA,QAAQ,EAAEqB,CAAC,IAAIpB,OAAO,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,YAPJ,eAYI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,WAAW,EAAC,mBAFhB;AAGI,MAAA,KAAK,EAAErB,MAHX;AAII,MAAA,QAAQ,EAAEmB,CAAC,IAAIlB,SAAS,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ5B;AAAA;AAAA;AAAA;AAAA,YAZJ,eAiBI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,uBAFhB;AAGI,MAAA,KAAK,EAAEnB,IAHX;AAII,MAAA,QAAQ,EAAEiB,CAAC,IAAIhB,OAAO,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,YAjBJ,eAsBI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,UAFhB;AAGI,MAAA,KAAK,EAAEjB,IAHX;AAII,MAAA,QAAQ,EAAEe,CAAC,IAAId,OAAO,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,YAtBJ,eA2BI;AACI,MAAA,OAAO,EAAEd,cADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CA5DM;;GAAMZ,kB;UAQOD,U;;;KARPC,kB;AA8Db,eAAeA,kBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nexport const CreateExercisePage = () => {\n\n    const [name, setName] = useState('');\n    const [reps, setReps] = useState('');\n    const [weight, setWeight] = useState('');\n    const [unit, setUnit] = useState('');\n    const [date, setDate] = useState('');\n\n    const history = useHistory()\n\n    const createExercise = async () => {\n        const newExercise = {name, reps, weight, unit, date};\n        const response = await fetch('/exercises', {\n            method: 'POST',\n            body: JSON.stringify(newExercise),\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        });\n        if (response.status === 201) {\n            alert(\"Successfully added the exercise.\");\n        } else {\n            alert(`Failed to add the exercise, status code = ${response.status}`)\n        }\n        history.push(\"/\");\n    };\n\n    return (\n        <div>\n            <h2 className=\"heading\">Create Exercise</h2>\n            <input\n                type=\"text\"\n                placeholder=\"Enter name here\"\n                value={name}\n                onChange={e => setName(e.target.value)} />\n            <input\n                type=\"number\"\n                value={reps}\n                placeholder=\"Enter reps here\"\n                onChange={e => setReps(e.target.value)} />\n            <input\n                type=\"number\"\n                placeholder=\"Enter weight here\"\n                value={weight}\n                onChange={e => setWeight(e.target.value)} />\n            <input \n                type=\"text\"\n                placeholder=\"Enter kgs or lbs here\"\n                value={unit} \n                onChange={e => setUnit(e.target.value)}/>\n            <input \n                type=\"text\" \n                placeholder=\"MM-DD-YY\" \n                value={date} \n                onChange={e => setDate(e.target.value)} />\n            <button\n                onClick={createExercise}\n            >Create</button>\n        </div>\n    );\n}\n\nexport default CreateExercisePage;"]},"metadata":{},"sourceType":"module"}